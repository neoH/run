#! /usr/bin/env python3

"""
---------------------------------------------------------------------------------------------
# File    : build
# Author  : Neo.H
# Date    : Sep 14, 2018
# Version : v1.00
---------------------------------------------------------------------------------------------
This is a build program for build up the simulation ENV. For now, mainly to provide the
ENV environments, such as PROJ_HOME, PROJ_NAME etc. This program will provide the variables
by printing these VARs to the screen, and the calling tool will access all these vars.
---------------------------------------------------------------------------------------------
Print Formats:
	-- PROJ_HOME=<Absolute Path>
---------------------------------------------------------------------------------------------
Variables need to provide in current version:
	-- PROJ_HOME
---------------------------------------------------------------------------------------------
Interfaces for this tool
	-- Input Options:
		-- No special inputs
	-- Outputs:
		-- print PROJ_HOME
---------------------------------------------------------------------------------------------
PS: this is a built-in executable program called by run.
---------------------------------------------------------------------------------------------
"""

## imports
## import system modules.
import sys;

## imports
## these import are from the common lib, so the path has been defined in ENV var.
from shell import shell;
import foper;

sh = shell();

## RUN_HOME ENV are needed in ENV var.
##
## the return type of get_output is list, while the prog_home is string, so need
## the following code for assignment.
[prog_home] = sh.get_output('echo $RUN_HOME');
if not prog_home:  ## {
	print(" no $RUN_HOME VAR found in ENV, please setup your ENV first.");
	sys.exit(126); ## system done, pre-build fatal.
## }
## else system not done, to add the $RUN_HOME/inc path to PYTHONPATH
##
sys.path.append(prog_home+'/inc');

from exception import exception;
import rpt;

## instance exception
exc = exception();

## -- Global variables ----

## g_rst
## the global variable that indicates the exit SIGNAL of this program.
##
g_rst = 0;


## -- Step 1. ---- get the proj_home,
proj_home = None;

## ------------------------------------------------------------------------------- ##
## PROJ_HOME determination.
##
## to search the proj_home, first to get current directory,
## ------------------------------------------------------------------------------- ##

## the return type of get_output is list, so need to do as following.
[g_cwd] = sh.get_output('pwd'); ## this global variable to get current work dir of run tool

## if g_cwd is None, then need to exit with program error.
if g_cwd == None: rpt.fatal("[__main__] no current work directory found."); exc.exit_pe();

## ----- here to continuous the process --------------------------------------------------
## check current dir is the right work dir by checking the g_cwd/cfgs/proj_cfg file.
## if the corresponding configure file not exists, then exit the program with UE SIG.
if not foper.exists(g_cwd+'/cfgs/proj_cfg'): rpt.error("[__main__] current dir is not a correct work dir."); exc.exit_ue();
## else to continue
## display the g_cwd as PROJ_HOME.
print ("PROJ_HOME="+g_cwd);


## if the main program can executes here, then return with normal result.
exc.exit_nm();
